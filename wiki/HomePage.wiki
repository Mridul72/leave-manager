
http://code.google.com/p/leave-manager/ : sources repository
[[Lexicon]] : to remember what is what... 

---

---+++ Daily Shedule

__preparation phase :__
   * *01/04* : *First project meeting*
      * description of the features expected
      * language and technology to be employed (development platform, JEE, tomcat, MVC)
      * project management (Gantt diagram, specifications, project wiki, open source license, versioning)
      * *TODO* :
         * *make some tutorials to learn Java, JEE, ajax, ...*
         * *review open source licenses and select one*
         * *install the development platform (eclipse, tomcat, ...)*
         * *install a versioning system (git ?) and find a repository for project sources (Google Code ?)*
         * *install a wiki and keep a "diary" of the project*
         * *install software to establish a schedule (Gantt diagram)*

   * *03/04* :
      * Review of open source licenses
      * Installation of "planner" from repository and testing of the program to do a Gantt diagram
      * Setup of Eclipse and Tomcat7 (EclipseTomcatSetup)

   * *04/04 - 06/04* :
      * Study of tutorials from "zero" web site :
         * http://www.siteduzero.com/tutoriel-3-10601-apprenez-a-programmer-en-java.html
         * http://www.siteduzero.com/tutoriel-3-112219-apprenez-a-creer-des-applications-web-dynamiques-avec-jee.html

   * *09/04* :
      * Study of a tutorial about the use of ajax with JEE :
         * http://www.devarticles.com/c/a/Java/J2EE-and-AJAX-AJAX-with-Servlets/1/

      * Setup of this wiki and start filling it (WikiSetup)

   * *10/04* :
      * Creation of a google code project and setup of Git (SetupOfGit):
         * http://code.google.com/p/leave-manager/
      * Study of a tutorial about the use of Java with databases : 
         * http://jmdoudoux.developpez.com/cours/developpons/java/chap-persistence.php
      * creation of a [[Lexicon]] in this wiki to remember what is what because it becomes difficult for me to assimilate all this new vocabulary ...

   * *22/04* : *Second project meeting*
      * explanations about the use of databases and Java (JDBC as connector, use of a driver to communicate with the database, ...)
      * decision was made not to use frameworks (forget Hibernate/Criteria/JPA), but simply JDBC to understand the basics of communication between Java and the database. To avoid additional complications, it was decided to use MySQL as database.
      * suggestion to use a pooling system to avoid repeated disconnections and connections to the database
      * *TODO* :
         * *make some more tutorials to understand the use of JDBC/MySQL*
         * *make some more tutorials to understand how to use a pooling system with tomcat7 and MySQL*
         * *make a state of the art of softwares about leave management*
         * *find how to prevent eclipse to use tabs for indenting Java files ... (solved for other file types)

   * *23/04* :
      * rereading of the tutorial http://jmdoudoux.developpez.com/cours/developpons/java/chap-jdbc.php#jdbc-4 in the light of the explanations of Yohan
      * installation of missing packages, configuration and first tests with the help of https://help.ubuntu.com/community/JDBCAndMySQL
      * summary of what has been done to use MySQL with Java : JDBCandMySQL
      * Study of some tutorials to understand how to implement pooling (with no success) :
         * http://www.rndblog.com/how-to-set-up-a-mysql-connection-pool-in-java/
         * http://tomcat.apache.org/tomcat-7.0-doc/jndi-datasource-examples-howto.html
         * http://java.sun.com/developer/technicalArticles/J2EE/pooling/

---

MEMO TODO:
pooling JDBC/MySQL ???
state of the art
hate tabs !!!

JUnit

QUESTIONS :
why adding /usr/share/java/mysql-connector-java.jar into Eclipse ?
is the .classpath file only used by eclipse or by tomcat too ?
in order to deploy the webapp on a server, is it not better to put the mysql-connector-java.jar into tomcat7/lib directory ?


for personal culture :
Spring http://ego.developpez.com/spring/
swing for server part / gwt for web interface ?

some things to remember for later updates of the wiki : RememberThis
